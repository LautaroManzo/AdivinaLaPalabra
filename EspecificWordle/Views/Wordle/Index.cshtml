@using EspecificWordle.Models

@model WordleViewModel

<script type="text/javascript">
    
    $(document).ready(function () {

        // Habilita la fila que se esta usando según el número de intento.
        enableRowByAttempt(@Model.Intentos);

        // Da foco al primer input o recarga la página.
        setTimeout(function () {

            if ('@Model.Intentos' == 0)
                filaFocus.find("input").first().focus();
            else
                loadPage('@Html.Raw(Model.JuegoDictionaryJson)', @Model.ModoId.ToString(), $("#GameFinish").val());

        }, 200);
        
    });

</script>

@Html.HiddenFor(x => x.Intentos)
@Html.HiddenFor(x => x.Length)
@Html.HiddenFor(x => x.ModoId)
@Html.HiddenFor(x => x.PalabraIngresada)
@Html.HiddenFor(x => x.Juego)
@Html.HiddenFor(x => x.JuegoDictionaryJson)
@Html.HiddenFor(x => x.Resultado)
@Html.HiddenFor(x => x.GameFinish)

<div class="div-contenedor d-flex flex-column align-items-center justify-content-center">

    @await Html.PartialAsync("Navbar")

    <div class="div-wordle d-flex flex-column gap-1 mw-100 mx-5 flex-fill justify-content-center">
        @for (int i = 0; i < 5; i++)    // FILAS
        {
            <div class="fila div-disable gap-1">
                @for (int j = 0; j < Model.Length; j++)  // COLUMNAS
                {
                    <div class="flex-fill">
                        <input name="@($"{i}_{j}")" type="text" class="form-control form-control-lg input p-0 rounded-1" autocomplete="off" role="presentation"
                               maxlength="1" oninput="this.value = this.value.toUpperCase()" />
                    </div>
                }
            </div>
        }
    </div>

    @await Html.PartialAsync("Keyboard")

</div>
