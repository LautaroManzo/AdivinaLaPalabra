@using Newtonsoft.Json
@using System.Collections

<script type="text/javascript">

    $(document).ready(function () {

        $(document).on("click", '.div-keyboard button', function () {
            
            if ($("#GameFinish").val() == "@false" || $("#GameFinish").val() == "false") {
    
                if ($(this).hasClass('delete')) {
                    onDeleteClick();
                    return;
                }
                else if ($(this).hasClass('enter')) {
                    return;
                }

                inputFocus.val($(this).text());

                inputFocus.parent().next('div').find('input').focus();
            }

        });

    });

    function obtenerFila(model, intento) {
        let palabraIngresada = "";
        for (let col = 0; col < @Model.Length; col++) {
            let key = `${intento}_${col}`;
            palabraIngresada += model[key];
        }
        return palabraIngresada;
    }

    function enter() {
        showLoader();

        let url = '@Html.Raw(Url.Action("Enter", "Wordle"))';
        data = { @Model.GetType().Name: $('form').serializeObject() };
        let palabraIngresada = obtenerFila(data.WordleViewModel, data.WordleViewModel.Intentos);

        if ($("#GameFinish").val() == "@true" || $("#GameFinish").val() == "true") {    // Ver de hacer una sola validación.
            modalResult($("#Resultado").val(), $("#Intentos").val(), @Model.ModoId, "@Html.Raw(Model.ModoDescripcion)");
            hideLoader();
        }
        else if (palabraIngresada.length == data.WordleViewModel.Length) {   // Esta validacion hacerla tambien en el back

            data.WordleViewModel.PalabraIngresada = obtenerFila(data.WordleViewModel, data.WordleViewModel.Intentos);
            data.__RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                type: 'POST',
                url: url,
                data: data,
                dataType: 'json',
                success: function (response) {

                    if (response.error) {
                        ShowMessage(response.message, "custom");
                    }
                    else {
                        // 'Mapeo' de viewmodel
                        $("#Intentos").val(response.intentos);
                        $("#ModoId").val(response.modoId);
                        $("#JuegoDictionaryJson").val(response.juegoDictionaryJson);
                        $("#Pista").val(response.pista);
                        $("#GameFinish").val(response.gameFinish);

                        if (response.resultado == 1) {
                            $("#Resultado").val(1);
                            changeInputAndButton(undefined, undefined, "input-success", "button-success", true, palabraIngresada);
                        }
                        else {
                            // Se recorre la lista de letras
                            $.each(response.juego[@Model.ModoId.ToString()][response.intentos - 1].letters, function (index, elemento) {
                                if (elemento.color == "Verde")
                                    changeInputAndButton(index, elemento.letra, "input-success", "button-success");
                                else if (elemento.color == "Amarillo")
                                    changeInputAndButton(index, elemento.letra, "input-medium", "button-medium");
                                else
                                    changeInputAndButton(index, elemento.letra, "input-gray", "button-gray");
                            });

                            filaFocus.next("div").removeClass('div-disable'); // Se saca la class en el div siguiente
                            filaFocus.addClass('div-disable');  // Se agrega la class en el div donde se ingresó la palabra
                            filaFocus = filaFocus.next("div");  // Se cambia la fila que tiene el foco
                            filaFocus.find("input").first().focus();  // Se da el foco al input de la fila siguiente

                            // Código para la pista
                            if (response.juego[@Model.ModoId.ToString()][response.intentos - 1].pista == true) {
                                let divM = $(".fila div button:contains('M')").parent();

                                divM.after(`
                                    <div class='div-pista'>
                                            <button type='button' onclick="showPista('${response.juego[@Model.ModoId.ToString()][response.intentos - 1].pistaDescripcion}')" class='form-control form-control-lg letras btn-pista rounded-1 p-0'>
                                            <img src='/Icons/solution.png' alt='Pista'>
                                        </button>
                                    </div>
                                `);

                                setTimeout(function () {
                                    addAnimation($(".div-pista"));
                                }, 200);
                            }

                            if (response.intentos == 5) {
                                $("#Resultado").val(0);

                                filaFocus.addClass('div-disable');
                                inputFocus.removeClass("foco");
                                inputFocus.blur();
                                inputFocus = null;

                                setTimeout(function () {
                                    modalResult(0, $("#Intentos").val(), @Model.ModoId, "@Html.Raw(Model.ModoDescripcion)");
                                }, 1000);
                            }
                        }

                    }

                    hideLoader();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    hideLoader();
                    console.error('Error al realizar la solicitud AJAX:', errorThrown);
                }
            });

        }
        else {
            hideLoader();
            ShowMessage("Debe ingresar todas las letras", "custom");
        }
    }

    // Se cambia el aspecto de los inputs y buttons
    function changeInputAndButton(posicion, letra, classInput, classButton, result, palabraIngresada) {

        if (result == true) {
            filaFocus.find('input').addClass(classInput);
            addAnimation(filaFocus.find('input').parent());

            var letras = palabraIngresada.split('');

            for (var i = 0; i < letras.length; i++) {
                let button = $(".div-keyboard").find("button:contains('" + letras[i] + "')").first();
                button.removeClass("button-medium");
                button.addClass(classButton);
            }

            filaFocus.addClass('div-disable');

            filaFocus.find('input.foco').removeClass("foco"); // buscar en el div no en la filafocus
            inputFocus = null;

            setTimeout(function () {
                modalResult(1, $("#Intentos").val(), @Model.ModoId, "@Html.Raw(Model.ModoDescripcion)");
            }, 900);
        }
        else {
            filaFocus.find('input').eq(posicion).addClass(classInput);
            addAnimation(filaFocus.find('input').parent());

            let button = $(".div-keyboard").find("button:contains('" + letra + "')").first();
         
            if (!button.hasClass("button-success")) {
                if (!button.hasClass("button-medium") || (button.hasClass("button-medium") && classButton == "button-success")) {
                    button.removeClass("button-medium");
                    button.addClass(classButton);
                }
            }

            if (result == 0) {
                filaFocus.find('input.foco').removeClass("foco"); // buscar en el div no en la filafocus
                
                setTimeout(function () {
                    modalResult(0, $("#Intentos").val(), @Model.ModoId, "@Html.Raw(Model.ModoDescripcion)");
                }, 900);
            }

        }
    }

    function modalResult(result, intento, modoId, modoDescripcion) {

        $.ajax({
            url: '@Url.Action("Result", "Wordle")',
            method: 'GET',
            data: { result: result, intento: intento, modoId: modoId, modoDescripcion: modoDescripcion },
            success: function (data) {

                if (!$(".show").length > 0) { 
                    let divModal = $("#resultModal");
                    divModal.attr('role', 'dialog');
                    divModal.addClass('modal fade');

                    divModal.append(data);

                    $('#resultModal').one('show.bs.modal', function () {
                                                
                        if(result != 0)
                            showConfetis();

                        if ($(".btn-pista"))
                            $(".btn-pista").parent().remove();
                    });

                    document.getElementById('resultModal').addEventListener('hidden.bs.modal', function () {
                        $(".modal-dialog").remove();
                    });

                    divModal.modal('show');
                }

            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error('Error al realizar la solicitud AJAX:', errorThrown);
            }
        });

    }

</script>

<div id="resultModal"></div>
<div id="instruccionesModal"></div>

<div class="div-keyboard d-flex flex-column w-100 gap-2">

@*  
    @if (Model.Tildes)
    {
        <div class="fila gap-2">
            <div class="flex-fill">
                <button type="button" class="form-control form-control-lg tildes rounded-1 p-0">Á</button>
            </div>
            <div class="flex-fill">
                <button type="button" class="form-control form-control-lg tildes rounded-1 p-0">É</button>
            </div>
            <div class="flex-fill">
                <button type="button" class="form-control form-control-lg tildes rounded-1 p-0">Í</button>
            </div>
            <div class="flex-fill">
                <button type="button" class="form-control form-control-lg tildes rounded-1 p-0">Ó</button>
            </div>
            <div class="flex-fill">
                <button type="button" class="form-control form-control-lg tildes rounded-1 p-0">Ú</button>
            </div>
        </div>
    } 
*@

    <div class="fila gap-2">
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">Q</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">W</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">E</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">R</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">T</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">Y</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">U</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">I</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">O</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">P</button>
        </div>
    </div>

    <div class="fila gap-2">
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">A</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">S</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">D</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">F</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">G</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">H</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">Y</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">J</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">K</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">L</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">Ñ</button>
        </div>
    </div>

    <div class="fila gap-2 mt-1">
        <div class="flex-fill">
            <button type="button" title="Intro" onclick="enter()" class="form-control form-control-lg letras enter rounded-1 p-0">
                <span class="d-none d-sm-inline">Intro</span>
                <span class="d-inline d-sm-none"><i class="fa-solid fa-circle-check"></i></span>
            </button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">Z</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">X</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">C</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">V</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">B</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">N</button>
        </div>
        <div class="flex-fill">
            <button type="button" class="form-control form-control-lg letras rounded-1 p-0">M</button>
        </div>
        <div class="flex-fill">
            <button type="button" title="Delete" class="form-control form-control-lg letras delete rounded-1 p-0"><i class="fa-solid fa-delete-left fa-lg"></i></button>
        </div>
    </div>

</div>
